-- Create the database
CREATE DATABASE project;
USE DATABASE project;

-- 1. User Table
CREATE TABLE User (
    UserId INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Gender VARCHAR(10),
    Age INT,
    MobileNo VARCHAR(15),
    City VARCHAR(50),
    State VARCHAR(50),
    Pincode VARCHAR(10),
    EmailId VARCHAR(100),
    Password VARCHAR(100)
);

-- Insert dummy data into User
INSERT INTO User (Name, Gender, Age, MobileNo, City, State, Pincode, EmailId, Password)
VALUES
('Alice', 'Female', 30, '9876543210', 'Mumbai', 'Maharashtra', '400001', 'alice@example.com', 'password123'),
('Bob', 'Male', 28, '9123456789', 'Delhi', 'Delhi', '110001', 'bob@example.com', 'password456');

-- 2. Admin Table
CREATE TABLE Admin (
    AdminId INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    EmailId VARCHAR(100),
    Password VARCHAR(100)
);

-- Insert dummy data into Admin
INSERT INTO Admin (Name, EmailId, Password)
VALUES
('Admin1', 'admin1@example.com', 'adminpass1'),
('Admin2', 'admin2@example.com', 'adminpass2');

-- 3. Passenger Table
CREATE TABLE Passenger (
    PassengerId INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Age INT,
    Gender VARCHAR(10),
    SeatNo INT,
    TicketId INT,
    UserId INT,
    TrainNo INT,
    StationNo INT,
    FOREIGN KEY (TicketId) REFERENCES Ticket(TicketId),
    FOREIGN KEY (UserId) REFERENCES User(UserId),
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (StationNo) REFERENCES Station(StationNo)
);

-- 4. Train Table
CREATE TABLE Train (
    TrainNo INT PRIMARY KEY AUTO_INCREMENT,
    ArrivalTime TIME,
    DepartureTime TIME,
    Destination VARCHAR(100),
    Source VARCHAR(100),
    Date DATE
);

-- Insert dummy data into Train
INSERT INTO Train (ArrivalTime, DepartureTime, Destination, Source, Date)
VALUES
('10:00:00', '10:30:00', 'Delhi', 'Mumbai', '2024-12-30'),
('15:00:00', '15:30:00', 'Chennai', 'Kolkata', '2024-12-31');

-- 5. Station Table
CREATE TABLE Station (
    StationNo INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    TrainNo INT,
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo)
);

-- Insert dummy data into Station
INSERT INTO Station (Name, TrainNo)
VALUES
('Mumbai Central', 1),
('Delhi Junction', 1),
('Howrah Junction', 2);

-- 6. Ticket Table
CREATE TABLE Ticket (
    TicketId INT PRIMARY KEY AUTO_INCREMENT,
    TrainNo INT,
    UserId INT,
    NoOfPassengers INT,
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (UserId) REFERENCES User(UserId)
);

-- Insert dummy data into Ticket
INSERT INTO Ticket (TrainNo, UserId, NoOfPassengers)
VALUES
(1, 1, 2),
(2, 2, 1);

-- 7. Booking Table
CREATE TABLE Booking (
    BookingId INT PRIMARY KEY AUTO_INCREMENT,
    UserId INT,
    TrainNo INT,
    TicketId INT,
    NoOfPassengers INT,
    BookingDate DATE,
    TotalFare DECIMAL(10, 2),
    FOREIGN KEY (UserId) REFERENCES User(UserId),
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (TicketId) REFERENCES Ticket(TicketId)
);

-- Insert dummy data into Booking
INSERT INTO Booking (UserId, TrainNo, TicketId, NoOfPassengers, BookingDate, TotalFare)
VALUES
(1, 1, 1, 2, '2024-12-25', 500.00),
(2, 2, 2, 1, '2024-12-26', 300.00);

-- 8. Cancellation Table
CREATE TABLE Cancellation (
    CancellationId INT PRIMARY KEY AUTO_INCREMENT,
    BookingId INT,
    CancellationDate DATE,
    RefundAmount DECIMAL(10, 2),
    RefundStatus VARCHAR(50),
    FOREIGN KEY (BookingId) REFERENCES Booking(BookingId)
);

-- Insert dummy data into Cancellation
INSERT INTO Cancellation (BookingId, CancellationDate, RefundAmount, RefundStatus)
VALUES
(1, '2024-12-27', 250.00, 'Refunded');

-- 9. Class Table
CREATE TABLE Class (
    ClassId INT PRIMARY KEY AUTO_INCREMENT,
    TrainNo INT,
    ClassType VARCHAR(50),
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo)
);

-- Insert dummy data into Class
INSERT INTO Class (TrainNo, ClassType)
VALUES
(1, 'First Class'),
(2, 'Second Class');

-- 10. Payment Table
CREATE TABLE Payment (
    PaymentId INT PRIMARY KEY AUTO_INCREMENT,
    BookingId INT,
    UserId INT,
    PaymentDate DATE,
    PaymentMode VARCHAR(50),
    PaymentStatus VARCHAR(50),
    AmountPaid DECIMAL(10, 2),
    FOREIGN KEY (BookingId) REFERENCES Booking(BookingId),
    FOREIGN KEY (UserId) REFERENCES User(UserId)
);

-- Insert dummy data into Payment
INSERT INTO Payment (BookingId, UserId, PaymentDate, PaymentMode, PaymentStatus, AmountPaid)
VALUES
(1, 1, '2024-12-25', 'Credit Card', 'Completed', 500.00),
(2, 2, '2024-12-26', 'Debit Card', 'Completed', 300.00);

-- 11. Seat Table
CREATE TABLE Seat (
    SeatId INT PRIMARY KEY AUTO_INCREMENT,
    TrainNo INT,
    ClassId INT,
    SeatNo INT,
    AvailabilityStatus VARCHAR(20),
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (ClassId) REFERENCES Class(ClassId)
);

-- Insert dummy data into Seat
INSERT INTO Seat (TrainNo, ClassId, SeatNo, AvailabilityStatus)
VALUES
(1, 1, 1, 'Available'),
(2, 2, 2, 'Booked');

-- 12. Route Table
CREATE TABLE Route (
    RouteId INT PRIMARY KEY AUTO_INCREMENT,
    TrainNo INT,
    StationNo INT,
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (StationNo) REFERENCES Station(StationNo)
);

-- Insert dummy data into Route
INSERT INTO Route (TrainNo, StationNo)
VALUES
(1, 1),
(1, 2),
(2, 3);

-- 13. Schedule Table
CREATE TABLE Schedule (
    ScheduleId INT PRIMARY KEY AUTO_INCREMENT,
    TrainNo INT,
    StationNo INT,
    ArrivalTime TIME,
    DepartureTime TIME,
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (StationNo) REFERENCES Station(StationNo)
);

-- Insert dummy data into Schedule
INSERT INTO Schedule (TrainNo, StationNo, ArrivalTime, DepartureTime)
VALUES
(1, 1, '09:50:00', '10:00:00'),
(1, 2, '12:50:00', '13:00:00'),
(2, 3, '14:50:00', '15:00:00');


CREATE TABLE Schedule (
    ScheduleId INT AUTO_INCREMENT PRIMARY KEY,
    TrainNo INT NOT NULL,
    StationNo INT NOT NULL,
    ArrivalTime TIME NOT NULL,
    DepartureTime TIME NOT NULL,
    FOREIGN KEY (TrainNo) REFERENCES Train(TrainNo),
    FOREIGN KEY (StationNo) REFERENCES Station(StationNo),
    FOREIGN KEY(TrainNo,Â StationNo)
);


